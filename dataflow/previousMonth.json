{
	"name": "previousMonth",
	"properties": {
		"folder": {
			"name": "project"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText16",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable9",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "select2"
				},
				{
					"name": "window1"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "cast1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          SalesOrderID as string,",
				"          RevisionNumber as string,",
				"          OrderDate as date,",
				"          DueDate as string,",
				"          ShipDate as string,",
				"          Status as string,",
				"          OnlineOrderFlag as string,",
				"          SalesOrderNumber as string,",
				"          PurchaseOrderNumber as string,",
				"          AccountNumber as string,",
				"          CustomerID as string,",
				"          SalesPersonID as string,",
				"          TerritoryID as string,",
				"          BillToAddressID as string,",
				"          ShipToAddressID as string,",
				"          ShipMethodID as string,",
				"          CreditCardID as string,",
				"          CreditCardApprovalCode as string,",
				"          CurrencyRateID as string,",
				"          SubTotal as string,",
				"          TaxAmt as string,",
				"          Freight as string,",
				"          TotalDue as integer,",
				"          Comment as string,",
				"          rowguid as string,",
				"          ModifiedDate as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 select(mapColumn(",
				"          OrderDate,",
				"          TotalDue",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"derivedColumn1 window(asc(month(OrderDate), true),",
				"     PreviousMonthDue = lag(SUM, 1, 0)) ~> window1",
				"cast1 aggregate(groupBy(OrderDate = month(OrderDate)),",
				"     SUM = sum(TotalDue)) ~> aggregate1",
				"select2 cast(output(",
				"          OrderDate as date 'yyyy/MM/dd'",
				"     ),",
				"     errors: true) ~> cast1",
				"aggregate1 derive(OrderByMonth = month(OrderDate)) ~> derivedColumn1",
				"window1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}